name: Deploy to Amazon EKS
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Application
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install

      # - name: Run Linter
      #   run: npm run lint

      - name: Build Project
        run: npm run build

  test:
    runs-on: ubuntu-latest
    name: Run Tests on Application
    needs: [build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies for Testing
        run: npm install

      - name: Run Unit Tests
        run: npm run test

  continue-delivery:
    name: Deploy to Amazon EKS Cluster
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          role-duration-seconds: 1200

      - name: Authenticate with Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
